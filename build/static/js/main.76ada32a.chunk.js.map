{"version":3,"sources":["firebase.js","Todo.jsx","App.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","useStyles","makeStyles","theme","paper","position","width","backgroundColor","border","boxShadow","shadows","padding","spacing","marginTop","Todo","props","classes","useState","open","setOpen","input","setInput","Container","maxWidth","Modal","onClose","e","Paper","component","Box","className","action","FormControl","InputLabel","Input","type","value","placeholder","todo","onChange","target","Button","onClick","disabled","variant","color","preventDefault","collection","doc","id","set","merge","List","ListItem","ListItemText","primary","secondary","size","startIcon","ml","btn-danger","delete","App","todos","setTodos","useEffect","orderBy","onSnapshot","snapshot","docs","map","data","add","timestamp","FieldValue","serverTimestamp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.76ada32a.chunk.js","sourcesContent":["import firebase from 'firebase';\r\nconst firebaseApp = firebase.initializeApp({\r\n\tapiKey: 'AIzaSyDYXfMrtC0rr83-TYhESINs6W2LshBOMlM',\r\n\tauthDomain: 'react-todo-pr.firebaseapp.com',\r\n\tprojectId: 'react-todo-pr',\r\n\tstorageBucket: 'react-todo-pr.appspot.com',\r\n\tmessagingSenderId: '557345966108',\r\n\tappId: '1:557345966108:web:c65b4464d7e3c08a83f7d9',\r\n\tmeasurementId: 'G-024ZP9REKM',\r\n});\r\n\r\nconst db = firebaseApp.firestore();\r\nexport default db;\r\n","import React, { useState } from 'react';\r\nimport './Todo.css';\r\nimport {\r\n\tList,\r\n\tListItem,\r\n\tListItemText,\r\n\tButton,\r\n\tModal,\r\n\tInputLabel,\r\n\tInput,\r\n\tFormControl,\r\n\tBox,\r\n\tContainer,\r\n\tPaper,\r\n} from '@material-ui/core';\r\nimport db from './firebase';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport UpdateIcon from '@material-ui/icons/Update';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport './App.css';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tpaper: {\r\n\t\tposition: 'absolute',\r\n\t\twidth: 470,\r\n\t\tbackgroundColor: 'lavender',\r\n\t\tborder: '1px solid #000',\r\n\t\tboxShadow: theme.shadows[5],\r\n\t\tpadding: theme.spacing(5),\r\n\t\tmarginTop: theme.spacing(5),\r\n\t},\r\n}));\r\n\r\nconst Todo = (props) => {\r\n\tconst classes = useStyles();\r\n\tconst [open, setOpen] = useState(false);\r\n\tconst [input, setInput] = useState('');\r\n\r\n\tconst handleOpen = () => {\r\n\t\tsetOpen(true);\r\n\t};\r\n\r\n\tconst updateTodo = (e) => {\r\n\t\te.preventDefault();\r\n\t\tdb.collection('todos').doc(props.todo.id).set(\r\n\t\t\t{\r\n\t\t\t\ttodo: input,\r\n\t\t\t},\r\n\t\t\t{ merge: true }\r\n\t\t);\r\n\t\tsetInput('');\r\n\t\tsetOpen(false);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Container maxWidth='sm'>\r\n\t\t\t\t<Modal open={open} onClose={(e) => setOpen(false)}>\r\n\t\t\t\t\t<Container maxWidth='sm'>\r\n\t\t\t\t\t\t<Paper component={Box} className={classes.paper}>\r\n\t\t\t\t\t\t\t<h1> UPDATE TODO </h1>\r\n\t\t\t\t\t\t\t<form action=''>\r\n\t\t\t\t\t\t\t\t<FormControl>\r\n\t\t\t\t\t\t\t\t\t<InputLabel> Update your Todo</InputLabel>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\t\t\t\tvalue={input}\r\n\t\t\t\t\t\t\t\t\t\tplaceholder={props.todo.todo}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => setInput(e.target.value)}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</FormControl>\r\n\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\tonClick={(e) => setOpen(false)}\r\n\t\t\t\t\t\t\t\t\tdisabled={!input}\r\n\t\t\t\t\t\t\t\t\ttype='submit'\r\n\t\t\t\t\t\t\t\t\tvariant='contained'\r\n\t\t\t\t\t\t\t\t\tcolor='primary'\r\n\t\t\t\t\t\t\t\t\tonClick={updateTodo}\r\n\t\t\t\t\t\t\t\t\tsize='small'\r\n\t\t\t\t\t\t\t\t\tstartIcon={<UpdateIcon />}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tUpdate Todo\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t</form>\r\n\t\t\t\t\t\t</Paper>\r\n\t\t\t\t\t</Container>\r\n\t\t\t\t</Modal>\r\n\r\n\t\t\t\t<List>\r\n\t\t\t\t\t<Box>\r\n\t\t\t\t\t\t<ListItem>\r\n\t\t\t\t\t\t\t<ListItemText\r\n\t\t\t\t\t\t\t\tprimary={props.todo.todo}\r\n\t\t\t\t\t\t\t\tsecondary='Dummy Deadline ⏰'\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t\t<Box className='button__block'>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tvariant='contained'\r\n\t\t\t\t\t\t\tcolor='primary'\r\n\t\t\t\t\t\t\tsize='small'\r\n\t\t\t\t\t\t\tstartIcon={<MoreVertIcon />}\r\n\t\t\t\t\t\t\tonClick={(e) => setOpen(true)}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tEdit\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t\t<Box className='button__block' ml={3}>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tvariant='contained'\r\n\t\t\t\t\t\t\tbtn-danger\r\n\t\t\t\t\t\t\tcolor='secondary'\r\n\t\t\t\t\t\t\tstartIcon={<DeleteIcon />}\r\n\t\t\t\t\t\t\tsize='small'\r\n\t\t\t\t\t\t\tonClick={(e) => {\r\n\t\t\t\t\t\t\t\tdb.collection('todos').doc(props.todo.id).delete();\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tDelete\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</List>\r\n\t\t\t</Container>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Todo;\r\n","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Todo from './Todo';\nimport {\n\tButton,\n\tFormControl,\n\tInput,\n\tInputLabel,\n\tContainer,\n} from '@material-ui/core';\nimport PlaylistAddCheckIcon from '@material-ui/icons/PlaylistAddCheck';\nimport db from './firebase';\nimport firebase from 'firebase';\n\nconst App = () => {\n\tconst [todos, setTodos] = useState([]);\n\tconst [input, setInput] = useState('');\n\n\tuseEffect(() => {\n\t\tdb.collection('todos')\n\t\t\t.orderBy('timestamp', 'desc')\n\t\t\t.onSnapshot((snapshot) => {\n\t\t\t\tsetTodos(\n\t\t\t\t\tsnapshot.docs.map((doc) => ({ id: doc.id, todo: doc.data().todo }))\n\t\t\t\t);\n\t\t\t});\n\t}, []);\n\n\tconst addTodos = (e) => {\n\t\te.preventDefault();\n\n\t\tdb.collection('todos').add({\n\t\t\ttodo: input,\n\t\t\ttimestamp: firebase.firestore.FieldValue.serverTimestamp(),\n\t\t});\n\n\t\tsetInput('');\n\t};\n\n\treturn (\n\t\t<Container className='App'>\n\t\t\t<h1>React Todo App</h1>\n\t\t\t<form action=''>\n\t\t\t\t<FormControl>\n\t\t\t\t\t<InputLabel>Add Todo 🖊 </InputLabel>\n\t\t\t\t\t<Input\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\tvalue={input}\n\t\t\t\t\t\tonChange={(e) => setInput(e.target.value)}\n\t\t\t\t\t/>\n\t\t\t\t</FormControl>\n\t\t\t\t<Button\n\t\t\t\t\tvariant='contained'\n\t\t\t\t\tcolor='primary'\n\t\t\t\t\ttype='submit'\n\t\t\t\t\tonClick={addTodos}\n\t\t\t\t\tdisabled={!input}\n\t\t\t\t>\n\t\t\t\t\t<PlaylistAddCheckIcon />\n\t\t\t\t\tAdd Todo\n\t\t\t\t</Button>\n\t\t\t\t<ul>\n\t\t\t\t\t{todos.map((todo) => (\n\t\t\t\t\t\t<Todo todo={todo} />\n\t\t\t\t\t))}\n\t\t\t\t</ul>\n\t\t\t</form>\n\t\t</Container>\n\t);\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}